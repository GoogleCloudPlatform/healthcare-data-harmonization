// This function accepts the datetime format and datetime as arguments and parses the datetime.
def Convert_DateTime(datetime_format, input) {
  var isoTime: parseDateTime(datetime_format, input);
  if (!isoTime) then {
    var isoTime:  formatDateTime("yyyy-MM-dd'T'HH:mm:ss.SSS'Z'", input)
  }
  if (!isoTime) then {
    fail("cannot parse DateTime");
  }
  isoTime
}

// ClearReconciliationTimestamp removes reconciliation timestamp of the
// input resource.
def  ClearReconciliationTimestamp(resource)  {
  // Remove timestamp under extension field.
  var extensionWithoutTimestamp: resource.extension;
  var resource: unset(resource, "extension");
  var resource.extension: extensionWithoutTimestamp[where $.url != "urn:oid:google/reconciliation-timestamp"];

  // Remove timestamp under meta.extension field.
  var metaWithoutTimestamp: resource.meta;
  var extensionWithoutTimestamp: metaWithoutTimestamp.extension;
  var metaWithoutTimestamp: unset(metaWithoutTimestamp, "extension");
  var metaWithoutTimestamp.extension: extensionWithoutTimestamp[where $.url != "urn:oid:google/reconciliation-timestamp"];
  var resource: unset(resource, "meta");
  var resource.meta: metaWithoutTimestamp;
}