  // Description: Extracts a ReferenceID from a FHIR Reference datatype
//
// Argument(s):
//   FHIR Reference datatype: https://www.hl7.org/fhir/stu3/references-definitions.html#Reference.reference
//
// Output(s):
//   FHIR Reference ID: https://www.hl7.org/fhir/stu3/references-definitions.html#Reference.reference
//
def Extract_ReferenceID(str) {
  var temp: $StrSplit(str, "/");
  $this: $IntHash(temp[1]);
}

// Description: Extracts a Reference Resource Name from a FHIR Reference datatype
//
// Argument(s):
//   FHIR Reference datatype: https://www.hl7.org/fhir/stu3/references-definitions.html#Reference.reference
//
// Output(s):
//   FHIR Reference Resource Name: https://www.hl7.org/fhir/stu3/references-definitions.html#Reference.reference
//
def Extract_ReferenceName(str) {
  var temp: $StrSplit(str, "/");
  $this: temp[0];
}

// Description: Extracts a date in OMOP format from a FHIR DateTime datatype
//
// Argument(s):
//   FHIR DateTime datatype: https://www.hl7.org/fhir/stu3/datatypes.html#dateTime
//
// Output(s):
//   OMOP Date datatype: SQL datetime
//
def Extract_Date(str) {
  $this: $ReformatTime("2006-01-02T15:04:05Z07:00", str, "2006-01-02");
}

// Description: Extracts a time in OMOP format from a FHIR DateTime datatype
//
// Argument(s):
//   FHIR DateTime datatype: https://www.hl7.org/fhir/stu3/datatypes.html#dateTime
//
// Output(s):
//   OMOP Time datatype: SQL datetime
//
def Extract_Time(str) {
  $this: $ReformatTime("2006-01-02T15:04:05Z07:00", str, "15:04:05Z07:00");
}

// Description: Extracts a Year in OMOP format from a FHIR Date datatype
//
// Argument(s):
//   FHIR Date datatype: https://www.hl7.org/fhir/stu3/datatypes.html#date
//
// Output(s):
//   OMOP Year datatype: integer
//
def Extract_Year(str) {
  $this: $ParseInt($ReformatTime("2006-01-02", str, "2006"));
}

// Description: Extracts a Month in OMOP format from a FHIR Date datatype
//
// Argument(s):
//   FHIR Date datatype: https://www.hl7.org/fhir/stu3/datatypes.html#date
//
// Output(s):
//   OMOP Month datatype: integer
//
def Extract_Month(str) {
  $this: $ParseInt($ReformatTime("2006-01-02", str, "01"));
}

// Description: Extracts a Day in OMOP format from a FHIR Date datatype
//
// Argument(s):
//   FHIR Date datatype: https://www.hl7.org/fhir/stu3/datatypes.html#date
//
// Output(s):
//   OMOP Day datatype: integer
//
def Extract_Day(str) {
  $this: $ParseInt($ReformatTime("2006-01-02", str, "02"));
}

def Convert_Terminology(Code, System){
  var mapping : $HarmonizeCode("$Local", Code, System, "FHIR-OMOP-ConceptMap");
  if (mapping[0].system = "FHIR-OMOP-ConceptMap-unharmonized") {
    $this : 0;
  } else {
    $this : $ParseInt(mapping[0].code);
  }
}

def Convert_Terminology_With_Target(Code, System, Target){
  var mapping : $HarmonizeCodeWithTarget("$Local", Code, System, Target, "FHIR-OMOP-ConceptMap");
  if (mapping[0].system = "FHIR-OMOP-ConceptMap-unharmonized") {
    $this : 0;
  } else {
    $this : $ParseInt(mapping[0].code);
  }
}

// Description: Constructs an OMOP Concept Table (v6.0) based on FHIR STU3 CodeableConcept datatype
//
// Argument(s):
//   CodeableConcept: https://www.hl7.org/fhir/stu3/datatypes.html#CodeableConcept
//
// Output(s):
//   Concept: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedVocabularies/CONCEPT.md
//
def CodeableConcept_Concept(CC) {
  concept_id : CC.code;
  concept_name : CC.display;
  vocabulary_id : CC.system;
  concept_code : CC.code
}

// Description: Constructs an OMOP VisitOccurrence Table (v6.0) based on FHIR STU3 Encounter Resource
//
// Argument(s):
//   Encounter: https://www.hl7.org/fhir/stu3/encounter.html
//
// Output(s):
//   VisitOccurrence: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/VISIT_OCCURRENCE.md
//
def Encounter_VisitOccurrence(Encounter) {
  visit_occurrence_id: $IntHash(Encounter.id);
  person_id: Extract_ReferenceID(Encounter.subject.reference);
  visit_concept_id: Convert_Terminology(Encounter.class.code, "http://hl7.org/fhir/v3/ActCode");
  visit_start_date: Extract_Date(Encounter.period.start);
  visit_start_datetime: Encounter.period.start;
  visit_end_date: Extract_Date(Encounter.period.end);
  visit_end_datetime: Encounter.period.end;
  // This constant comes from the suggested mapping: 44818518 (Visit derived from EHR)
  visit_type_concept_id: 44818518;
  care_site_id: Extract_ReferenceID(Encounter.serviceProvider.reference);
  provider_id: Extract_ReferenceID(Encounter.participant[0].individual.reference);
  admitted_from_concept_id : Convert_Terminology(Encounter.hospitalization.admitSource.coding[0].code, Encounter.hospitalization.admitSource.coding[0].system);
  // No Matching Concept/Attribute found in FHIR STU3
  visit_source_concept_id : 0;
  discharge_to_concept_id : 0;
}

// Description: Constructs an OMOP Observation Table (v6.0) based on FHIR STU3 Observation Resource
//
// Argument(s):
//   Observation: https://www.hl7.org/fhir/stu3/observation.html
//
// Output(s):
//   Observation: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/OBSERVATION.md
//
def Observation_Observation(Observation) {
  observation_id: $IntHash(Observation.id);
  person_id (if Extract_ReferenceName(Observation.subject.reference) = "Patient") : Extract_ReferenceID(Observation.subject.reference);
  observation_concept_id : Convert_Terminology(Observation.code.coding[0].code, Observation.code.coding[0].system);
  observation_date : Extract_Date(Observation.issued);
  observation_datetime : Observation.issued;
  observation_type_concept_id : Convert_Terminology_With_Target(Observation.category[0].coding[0].code, Observation.category[0].coding[0].system,"LOINC");
  value_as_number : Observation.valueQuantity.value;
  value_as_string : Observation.valueString;
  value_as_concept_id : Convert_Terminology(Observation.valueCodeableConcept.coding[0].code, Observation.valueCodeableConcept.coding[0].system);
  unit_concept_id : Convert_Terminology(Observation.valueQuantity.unit, Observation.valueQuantity.system);
  var provider : Observation.performer[where Extract_ReferenceName($.reference) = "Practitioner"];
  provider_id : Extract_ReferenceID(provider[0].reference);
  visit_occurrence_id (if Extract_ReferenceName(Observation.context.reference) = "Encounter") : Extract_ReferenceID(Observation.context.reference);
  observation_source_value : Observation.category[0].coding[0].display;
  observation_source_concept_id : Convert_Terminology_With_Target(Observation.category[0].coding[0].code, Observation.category[0].coding[0].system,"LOINC");
  unit_source_value : Observation.valueQuantity.unit;
  // No Matching Concept/Attribute found in FHIR STU3
  obs_event_field_concept_id : 0;
}

// Description: Constructs an OMOP ObservationPeriod Table (v6.0) based on FHIR STU3 Encounter Resource
//
// Argument(s):
//   Encounter: https://www.hl7.org/fhir/stu3/encounter.html
// Output(s):
//   Observation: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/OBSERVATION_PERIOD.md
//
def Encounter_ObservationPeriod(Encounter){
  observation_period_id : $IntHash(Encounter.id);
  person_id (if Extract_ReferenceName(Encounter.subject.reference) = "Patient") : Extract_ReferenceID(Encounter.subject.reference);
  observation_period_start_date : Extract_Date(Encounter.period.start);
  observation_period_end_date : Extract_Date(Encounter.period.end);
  period_type_concept_id : Encounter.type[0].coding[0].code;
}

// Description: Constructs an OMOP ObservationPeriod Table (v6.0) based on FHIR STU3 Observation Resource
//
// Argument(s):
//   Observation: https://www.hl7.org/fhir/stu3/observation.html
// Output(s):
//   Observation: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/OBSERVATION_PERIOD.md
//
def Observation_ObservationPeriod(Observation){
  observation_period_id : $IntHash($UUID());
  person_id (if Extract_ReferenceName(Observation.subject.reference) = "Patient") : Extract_ReferenceID(Observation.subject.reference);
  observation_period_start_date : Extract_Date(Observation.effectivePeriod.start);
  observation_period_end_date : Extract_Date(Observation.effectivePeriod.end);
  period_type_concept_id : Convert_Terminology_With_Target(Observation.category[0].coding[0].code, Observation.category[0].coding[0].system,"LOINC");
}

// Description: Constructs an OMOP Person Table (v6.0) based on FHIR STU3 Patient Resource
//
// Argument(s):
//   Patient: https://www.hl7.org/fhir/stu3/patient.html
//   LocationID: OMOP Location Table (v6.0), already transformed using Address_Location projector - https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedHealthSystemDataTables/LOCATION.md
// Output(s):
//   Person: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/PERSON.md
//
def Patient_Person(Patient, locationID) {
  person_id : $IntHash(Patient.id);
  person_source_value : Patient.identifier[0].value;
  gender_source_value : Patient.gender;
  gender_concept_id : Convert_Terminology(Patient.gender, "http://hl7.org/fhir/administrative-gender");
  gender_source_concept_id : Convert_Terminology(Patient.gender, "http://hl7.org/fhir/administrative-gender");
  birth_datetime : $ReformatTime("2006-01-02", Patient.birthDate, "2006-01-02T15:04:05-07:00");
  death_datetime : Patient.deceasedDateTime;
  year_of_birth : Extract_Year(Patient.birthDate);
  month_of_birth : Extract_Month(Patient.birthDate);
  day_of_birth : Extract_Day(Patient.birthDate);
  var race : Patient.extension[where $.url = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race"];
  race_concept_id : Convert_Terminology_With_Target(race[0].extension[0].valueCoding.code, race[0].extension[0].valueCoding.system, "Race");
  race_source_value : race[0].extension[0].valueCoding.display;
  race_source_concept_id : Convert_Terminology_With_Target(race[0].extension[0].valueCoding.code, race[0].extension[0].valueCoding.system, "Race");
  var ethnicity : Patient.extension[where $.url = "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity"];
  ethnicity_concept_id : Convert_Terminology_With_Target(ethnicity[0].extension[0].valueCoding.code, ethnicity[0].extension[0].valueCoding.system, "Ethnicity");
  ethnicity_source_value : ethnicity[0].extension[0].valueCoding.display;
  ethnicity_source_concept_id : Convert_Terminology_With_Target(ethnicity[0].extension[0].valueCoding.code, ethnicity[0].extension[0].valueCoding.system, "Ethnicity");
  var provider : Patient.generalPractitioner[where Extract_ReferenceName($.reference) = "Practitioner"];
  provider_id : Extract_ReferenceID(provider[0].reference);
  care_site_id : Extract_ReferenceID(Patient.managingOrganization.reference);
  location_id : locationID;
}

// Description: Constructs an OMOP Location Table (v6.0) based on FHIR STU3 Address Datatype
//
// Argument(s):
//   Address: http://hl7.org/fhir/STU3/datatypes.html#Address
//
// Output(s):
//   Location: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedHealthSystemDataTables/LOCATION.md
//
def Address_Location(Address) {
  location_id : $IntHash($UUID());
  address_1 : Address.line[0];
  address_2 : Address.line[1];
  city : Address.city;
  state : $SubStr(Address.state,0,2);
  zip : Address.postalCode;
  county : Address.district;
  country : Address.country;
  location_source_value : Address.text;
  var geoLocation : Address.extension[where $.url = "http://hl7.org/fhir/StructureDefinition/geolocation"];
  var latitudeInfo : geoLocation[0].extension[where $.url = "latitude"];
  var longitudeInfo : geoLocation[0].extension[where $.url = "longitude"];
  latitude : latitudeInfo[0].valueDecimal;
  longitude : longitudeInfo[0].valueDecimal;
}

// Description: Constructs an OMOP Provider Table (v6.0) based on FHIR STU3 Practitioner Resource
//
// Argument(s):
//   Practitioner: https://www.hl7.org/fhir/stu3/practitioner.html
//
// Output(s):
//   Provider: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedHealthSystemDataTables/PROVIDER.md
//
def Practitioner_Provider(Practitioner) {
  provider_id : $IntHash(Practitioner.id);
  provider_name : $StrCat(Practitioner.name[0].prefix[0], " ", Practitioner.name[0].given[0], " ", Practitioner.name[0].family);
  gender_concept_id : Convert_Terminology(Practitioner.gender, "http://hl7.org/fhir/administrative-gender");
  gender_source_concept_id : Convert_Terminology(Practitioner.gender, "http://hl7.org/fhir/administrative-gender");
  specialty_concept_id : Convert_Terminology(Practitioner.qualification[0].code.coding[0].code, Practitioner.qualification[0].code.coding[0].system);
  specialty_source_concept_id : Convert_Terminology(Practitioner.qualification[0].code.coding[0].code, Practitioner.qualification[0].code.coding[0].system);
  year_of_birth (if Practitioner.birthDate) : Extract_Year(Practitioner.birthDate);
}

// Description: Constructs an OMOP ProcedureOccurrence Table (v6.0) based on FHIR STU3 Procedure Resource
//
// Argument(s):
//   Procedure: https://www.hl7.org/fhir/stu3/procedure.html
//
// Output(s):
//   ProcedureOccurrence: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/PROCEDURE_OCCURRENCE.md
//
def Procedure_ProcedureOccurrence(Procedure) {
  procedure_occurrence_id : $IntHash(Procedure.id);
  person_id (if Extract_ReferenceName(Procedure.subject.reference) = "Patient") : Extract_ReferenceID(Procedure.subject.reference);
  procedure_concept_id : Convert_Terminology(Procedure.code.coding[0].code, Procedure.code.coding[0].system);
  procedure_source_concept_id : Convert_Terminology(Procedure.code.coding[0].code, Procedure.code.coding[0].system);
  if (Procedure.performedPeriod) {
    procedure_date : Extract_Date(Procedure.performedPeriod.start);
    procedure_datetime : Procedure.performedPeriod.start
  }
  if (Procedure.performedDateTime) {
    procedure_date : Extract_Date(Procedure.performedDateTime);
    procedure_datetime : Procedure.performedDateTime
  }
  procedure_type_concept_id : Convert_Terminology(Procedure.category.coding[0].code, Procedure.category.coding[0].system);
  visit_occurrence_id (if Extract_ReferenceName(Procedure.context.reference) = "Encounter") : Extract_ReferenceID(Procedure.context.reference);
  var provider : Procedure.performer[where Extract_ReferenceName($.actor.reference) = "Practitioner"];
  provider_id : Extract_ReferenceID(provider[0].actor.reference);
  modifier_concept_id : Convert_Terminology(Procedure.bodySite[0].coding[0].code, Procedure.bodySite[0].coding[0].system);
}

// Description: Constructs an OMOP ConditionOccurrence Table (v6.0) based on FHIR STU3 Condition Resource
//
// Argument(s):
//   Condition: https://www.hl7.org/fhir/stu3/condition.html
//
// Output(s):
//   ConditionOccurrence: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/CONDITION_OCCURRENCE.md
//
def Condition_ConditionOccurrence(Condition) {
  condition_occurrence_id : $IntHash(Condition.id);
  person_id (if Extract_ReferenceName(Condition.subject.reference) = "Patient") : Extract_ReferenceID(Condition.subject.reference);
  condition_concept_id : Convert_Terminology(Condition.code.coding[0].code, Condition.code.coding[0].system);
  if (Condition.onsetPeriod) {
    condition_start_date : Extract_Date(Condition.onsetPeriod.start);
    condition_start_datetime : Condition.onsetPeriod.start
    condition_end_date : Extract_Date(Condition.onsetPeriod.end);
    condition_end_datetime : Condition.onsetPeriod.end
  }
  if (Condition.onsetDateTime) {
    condition_start_date : Extract_Date(Condition.onsetDateTime);
    condition_start_datetime : Condition.onsetDateTime
  }
  condition_type_concept_id : Convert_Terminology(Condition.category[0].coding[0].code, Condition.category[0].coding[0].system);
  stop_reason : Condition.abatementString;
  provider_id (if Extract_ReferenceName(Condition.asserter.reference) = "Practitioner") : Extract_ReferenceID(Condition.asserter.reference);
  visit_occurrence_id (if Extract_ReferenceName(Condition.context.reference) = "Encounter") : Extract_ReferenceID(Condition.context.reference);
  condition_source_value : Condition.code.coding[0].display;
  condition_source_concept_id : Convert_Terminology(Condition.code.coding[0].code, Condition.code.coding[0].system);

// For FHIR STU3
  condition_status_concept_id : Convert_Terminology(Condition.clinicalStatus, "http://hl7.org/fhir/condition-clinical");

// For FHIR R4
//  condition_status_concept_id : Convert_Terminology(Condition.clinicalStatus.coding[0].code, Condition.clinicalStatus.coding[0].system);
}

// Description: Constructs an OMOP Drug_Exposure Table (v6.0) based on FHIR STU3 MedicationStatement Resource
//
// Argument(s):
//   MedicationStatement: https://hl7.org/fhir/STU3/medicationstatement.html
//
// Output(s):
//   Drug_Exposure: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/DRUG_EXPOSURE.md
//
def MedicationStatement_DrugExposure(MedicationStatement) {
  drug_exposure_id : $IntHash(MedicationStatement.id);
  person_id (if Extract_ReferenceName(MedicationStatement.subject.reference) = "Patient") : Extract_ReferenceID(MedicationStatement.subject.reference);
  drug_concept_id : Convert_Terminology(MedicationStatement.medicationCodeableConcept.coding[0].code, MedicationStatement.medicationCodeableConcept.coding[0].system);
  drug_exposure_start_datetime : MedicationStatement.effectivePeriod.start;
  drug_exposure_end_datetime : MedicationStatement.effectivePeriod.end;
  drug_exposure_start_date : Extract_Date(MedicationStatement.effectivePeriod.start);
  drug_exposure_end_date : Extract_Date(MedicationStatement.effectivePeriod.end);
  verbatim_end_date : Extract_Date(MedicationStatement.effectivePeriod.end);
  drug_type_concept_id : Convert_Terminology(MedicationStatement.category.coding[0].code, MedicationStatement.category.coding[0].system);
  if (MedicationStatement.reasonNotTaken? and MedicationStatement.status = "stopped") {
    stop_reason : $SubStr(MedicationStatement.reasonNotTaken[0].coding[0].display,0,20);
  }
  sig : MedicationStatement.dosage[0].text;
  route_concept_id : Convert_Terminology(MedicationStatement.dosage[0].route.coding[0].code, MedicationStatement.dosage[0].route.coding[0].system);
  provider_id (if Extract_ReferenceName(MedicationStatement.informationSource.reference) = "Practitioner") : Extract_ReferenceID(MedicationStatement.informationSource.reference);
  visit_occurrence_id (if Extract_ReferenceName(MedicationStatement.context.reference) = "Encounter") : Extract_ReferenceID(MedicationStatement.context.reference);
  drug_source_value : MedicationStatement.medicationCodeableConcept.coding[0].display;
  drug_source_concept_id : Convert_Terminology(MedicationStatement.medicationCodeableConcept.coding[0].code, MedicationStatement.medicationCodeableConcept.coding[0].system);
}

// Description: Constructs an OMOP Drug_Exposure Table (v6.0) based on FHIR STU3 MedicationRequest Resource
//
// Argument(s):
//   MedicationRequest: https://www.hl7.org/fhir/stu3/medicationrequest.html
//
// Output(s):
//   Drug_Exposure: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/DRUG_EXPOSURE.md
//
def MedicationRequest_DrugExposure(MedicationRequest) {
  drug_exposure_id : $IntHash(MedicationRequest.id);
  person_id(if Extract_ReferenceName(MedicationRequest.subject.reference) = "Patient") : Extract_ReferenceID(MedicationRequest.subject.reference);
  drug_concept_id : Convert_Terminology(MedicationRequest.medicationCodeableConcept.coding[0].code, MedicationRequest.medicationCodeableConcept.coding[0].system);
  if (MedicationRequest.dispenseRequest.validityPeriod?){
    drug_exposure_start_datetime : MedicationRequest.dispenseRequest.validityPeriod.start;
    drug_exposure_end_datetime : MedicationRequest.dispenseRequest.validityPeriod.end;
    drug_exposure_start_date : Extract_Date(MedicationRequest.dispenseRequest.validityPeriod.start);
    drug_exposure_end_date : Extract_Date(MedicationRequest.dispenseRequest.validityPeriod.end);
  } else {
    drug_exposure_start_datetime : MedicationRequest.authoredOn;
    drug_exposure_start_date : Extract_Date(MedicationRequest.authoredOn);
  }
  verbatim_end_date : Extract_Date(MedicationRequest.dispenseRequest.validityPeriod.end);
  drug_type_concept_id : Convert_Terminology(MedicationRequest.category.coding[0].code, MedicationRequest.category.coding[0].system);
  refills : MedicationRequest.dispenseRequest.numberOfRepeatsAllowed;
  quantity : MedicationRequest.dispenseRequest.quantity.value;
  days_supply : MedicationRequest.dispenseRequest.expectedSupplyDuration.value;
  sig : MedicationRequest.dosageInstruction[0].text;
  route_concept_id : Convert_Terminology(MedicationRequest.dosageInstruction[0].route.coding[0].code, MedicationRequest.dosageInstruction[0].route.coding[0].system);
  provider_id : Extract_ReferenceID(MedicationRequest.recorder.reference);
  visit_occurrence_id (if Extract_ReferenceName(MedicationRequest.context.reference) = "Encounter") : Extract_ReferenceID(MedicationRequest.context.reference);
  drug_source_value : MedicationRequest.medicationCodeableConcept.coding[0].display;
  drug_source_concept_id : Convert_Terminology(MedicationRequest.medicationCodeableConcept.coding[0].code, MedicationRequest.medicationCodeableConcept.coding[0].system);
}

// Description: Constructs an OMOP Drug_Exposure Table (v6.0) based on FHIR STU3 MedicationDispense Resource
//
// Argument(s):
//   MedicationDispense: https://www.hl7.org/fhir/stu3/medicationdispense.html
//
// Output(s):
//   Drug_Exposure: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/DRUG_EXPOSURE.md
//
def MedicationDispense_DrugExposure(MedicationDispense) {
  drug_exposure_id : $IntHash(MedicationDispense.id);
  person_id (if Extract_ReferenceName(MedicationDispense.subject.reference) = "Patient") : Extract_ReferenceID(MedicationDispense.subject.reference);
  drug_concept_id : Convert_Terminology(MedicationDispense.medicationCodeableConcept.coding[0].code, MedicationDispense.medicationCodeableConcept.coding[0].system);
  if (MedicationDispense.whenPrepared?) {
    drug_exposure_start_datetime : MedicationDispense.whenPrepared;
    drug_exposure_start_date : Extract_Date(MedicationDispense.whenPrepared);
    //TODO: DRUG_EXPOSURE_END_DATETIME = DRUG_EXPOSURE_START_DATETIME + DAYS_SUPPLY -1
    drug_exposure_end_datetime : MedicationDispense.whenPrepared;
  } else {
    drug_exposure_start_datetime : MedicationDispense.whenHandedOver;
    drug_exposure_start_date : Extract_Date(MedicationDispense.whenHandedOver);
    //TODO: DRUG_EXPOSURE_END_DATETIME = DRUG_EXPOSURE_START_DATETIME + DAYS_SUPPLY -1
    drug_exposure_end_datetime : MedicationDispense.whenHandedOver;
  }
  verbatim_end_date : Extract_Date(MedicationDispense.dispenseRequest.validityPeriod.end);
  drug_type_concept_id : Convert_Terminology(MedicationDispense.category.coding[0].code, MedicationDispense.category.coding[0].system);
  if (MedicationDispense.notDoneReasonCodeableConcept? and MedicationDispense.notDone = true) {
    stop_reason : $SubStr(MedicationDispense.notDoneReasonCodeableConcept.coding[0].display,0,20);
  }
  quantity : MedicationDispense.quantity.value;
  days_supply : MedicationDispense.daysSupply.value;
  sig : MedicationDispense.dosageInstruction[0].text;
  route_concept_id : Convert_Terminology(MedicationDispense.dosageInstruction[0].route.coding[0].code, MedicationDispense.dosageInstruction[0].route.coding[0].system);
  var provider : MedicationDispense.performer[where Extract_ReferenceName($.actor.reference) = "Practitioner"];
  provider_id : Extract_ReferenceID(provider[0].actor.reference);
  visit_occurrence_id (if Extract_ReferenceName(MedicationDispense.context.reference) = "Encounter") : Extract_ReferenceID(MedicationDispense.context.reference);
  drug_source_value : MedicationDispense.medicationCodeableConcept.coding[0].display;
  drug_source_concept_id : Convert_Terminology(MedicationDispense.medicationCodeableConcept.coding[0].code, MedicationDispense.medicationCodeableConcept.coding[0].system);
}

// Description: Constructs an OMOP Drug_Exposure Table (v6.0) based on FHIR STU3 MedicationAdministration Resource
//
// Argument(s):
//   MedicationAdministration: https://www.hl7.org/fhir/stu3/MedicationAdministration.html
//
// Output(s):
//   Drug_Exposure: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/DRUG_EXPOSURE.md
//
def MedicationAdministration_DrugExposure(MedicationAdministration) {
  drug_exposure_id : $IntHash(MedicationAdministration.id);
  person_id (if Extract_ReferenceName(MedicationAdministration.subject.reference) = "Patient") : Extract_ReferenceID(MedicationAdministration.subject.reference);
  drug_concept_id : Convert_Terminology(MedicationAdministration.medicationCodeableConcept.coding[0].code, MedicationAdministration.medicationCodeableConcept.coding[0].system);
  if (MedicationAdministration.effectivePeriod?){
    drug_exposure_start_datetime : MedicationAdministration.effectivePeriod.start;
    drug_exposure_end_datetime : MedicationAdministration.effectivePeriod.end;
    drug_exposure_start_date : Extract_Date(MedicationAdministration.effectivePeriod.start);
    drug_exposure_end_date : Extract_Date(MedicationAdministration.effectivePeriod.end);
    verbatim_end_date : Extract_Date(MedicationAdministration.effectivePeriod.end);
  }  else {
    drug_exposure_start_datetime : MedicationAdministration.effectiveDateTime;
    drug_exposure_start_date : Extract_Date(MedicationAdministration.effectiveDateTime);
  }
  drug_type_concept_id : Convert_Terminology(MedicationAdministration.category.coding[0].code, MedicationAdministration.category.coding[0].system);
  stop_reason : $SubStr(MedicationAdministration.reasonNotGiven[0].coding[0].display,0,20);
  quantity : MedicationAdministration.dosage.rateRatio.numerator.value;
  sig : MedicationAdministration.dosage.text;
  route_concept_id : Convert_Terminology(MedicationAdministration.dosage.route.coding[0].code, MedicationAdministration.dosage.route.coding[0].system);
  var provider : MedicationAdministration.performer[where Extract_ReferenceName($.actor.reference) = "Practitioner"];
  provider_id : Extract_ReferenceID(provider[0].actor.reference);
  visit_occurrence_id (if Extract_ReferenceName(MedicationAdministration.context.reference) = "Encounter") : Extract_ReferenceID(MedicationAdministration.context.reference);
  drug_source_value : MedicationAdministration.medicationCodeableConcept.coding[0].display;
  drug_source_concept_id : Convert_Terminology(MedicationAdministration.medicationCodeableConcept.coding[0].code, MedicationAdministration.medicationCodeableConcept.coding[0].system);
}

// Description: Constructs an OMOP Specimen Table (v6.0) based on FHIR STU3 Specimen Resource
//
// Argument(s):
//   Specimen: https://hl7.org/fhir/stu3/specimen.html
//
// Output(s):
//   Specimen: https://github.com/OHDSI/CommonDataModel/blob/v6.0.0/Documentation/CommonDataModel_Wiki_Files/StandardizedClinicalDataTables/SPECIMEN.md
//
def Specimen_Specimen(Specimen) {
  specimen_id : $IntHash(Specimen.id);
  person_id (if Extract_ReferenceName(Specimen.subject.reference) = "Patient") : Extract_ReferenceID(Specimen.subject.reference);
  specimen_concept_id : Convert_Terminology(Specimen.type.coding[0].code, Specimen.type.coding[0].system);
  specimen_type_concept_id : Convert_Terminology(Specimen.type.coding[0].code, Specimen.type.coding[0].system);
  specimen_date : Extract_Date(Specimen.collection.collectedDateTime);
  specimen_datetime : Specimen.collection.collectedDateTime;
  quantity : Specimen.collection.quantity.value;
  unit_concept_id : Convert_Terminology(Specimen.collection.quantity.unit, "http://unitsofmeasure.org");
  anatomic_site_concept_id : Convert_Terminology(Specimen.collection.bodySite.coding[0].code, Specimen.collection.bodySite.coding[0].system);
  // No Matching Concept/Attribute found in FHIR STU3
  disease_status_concept_id : 0;
}
