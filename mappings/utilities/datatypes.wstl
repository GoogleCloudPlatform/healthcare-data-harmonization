package datatypes

def HealthcareAPIPath() "https://healthcare.googleapis.com/v1"

def getCurrentTime() currentTime("yyyy-MM-dd'T'HH:mm:ss.SSSXXX")

def BuildReference(reference) {
  reference: reference
}

def BuildReferenceFromResource(required resource) {
  reference: ResourceReference(resource)
}

def BuildReferenceFromNonLocalGCPResource(fhirStorePath, resource) {
  reference: NonLocalGCPResourceReference(fhirStorePath, resource)
}

def BuildReferenceFromNonLocalGCPResource(fhirStorePath, resourceType, resourceId) {
  reference: NonLocalGCPResourceReference(fhirStorePath, resourceType, resourceId)
}

def ResourceReference(resource)
  "{resource.resourceType}/{resource.id}"

def ResourceReference(resourceType, id)
  "{resourceType}/{id}"

def NonLocalGCPResourceReference(fhirStorePath, resource)
  NonLocalGCPResourceReference(fhirStorePath, resource.resourceType, resource.id)

def NonLocalGCPResourceReference(fhirStorePath, resourceType, resourceId)
  "{HealthcareAPIPath()}/{fhirStorePath}/fhir/{resourceType}/{resourceId}"

// ClearReconciliationTimestamp removes reconciliation timestamp of the
// input resource.
def ClearReconciliationTimestamp(resource) {
  // Remove timestamp under extension field.
  var extensionWithoutTimestamp: resource.extension
  var resource: unset(resource, "extension")
  var resource.extension: extensionWithoutTimestamp[where $.url != "urn:oid:google/reconciliation-timestamp"]

  // Remove timestamp under meta.extension field.
  var metaWithoutTimestamp: resource.meta
  var extensionWithoutTimestamp: metaWithoutTimestamp.extension
  var metaWithoutTimestamp: unset(metaWithoutTimestamp, "extension")
  var metaWithoutTimestamp.extension: extensionWithoutTimestamp[where $.url != "urn:oid:google/reconciliation-timestamp"]
  var resource: unset(resource, "meta")
  var resource.meta: metaWithoutTimestamp
}

def in(el, arr) arr[where $ == el]?
