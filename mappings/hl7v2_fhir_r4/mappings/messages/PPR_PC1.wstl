package messages

// Description: Define PPR_PC1 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   PPR_PC1 HL7v2 Message Type (version 2.9)
//   PPR_PC1 Segments covered in this mapping configuration are: MSH, PID, PV1, PRB, GOL, OBX, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   ServiceRequest: https://www.hl7.org/fhir/servicerequest.html
//
def PPR_PC1(required PPR_PC1) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(PPR_PC1.MSH))

  var Patient: segments::PID_PD1_Patient(PPR_PC1.PID, {})
  var Patient.extension[]: if PPR_PC1.PATIENT_VISIT.PV1.16 then utilities::Build_Extension(datatypes::CWE_CodeableConcept(PPR_PC1.PATIENT_VISIT.PV1.16), "codeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(PPR_PC1.MSH.7, PPR_PC1.MSH.10)
  root Provenance: segments::MSH_Provenance(PPR_PC1.MSH, PatientReference)

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(PPR_PC1.PATIENT_VISIT.PV1, {}, PPR_PC1.MSH.9, {}, PatientReference, {}))  // passing {} since DG1 not present

  $this: groups::Parse_PROBLEM(PPR_PC1.PROBLEM[], PatientReference, EncounterReference)
}
