package messages

// Description: Define ORM_O01 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ORM_O01 HL7v2 Message Type (version 2.9)
//   ORM_O01 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC, AL1, GT1, IN1
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Coverage: https://www.hl7.org/fhir/coverage.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/relatedperson.html
//   ServiceRequest: https://www.hl7.org/fhir/servicerequest.html
//
def ORM_O01(required ORM_O01) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ORM_O01.MSH))

  var Patient: segments::PID_PD1_Patient(ORM_O01.PATIENT.PID, ORM_O01.PATIENT.PD1)
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(ORM_O01.PATIENT.PATIENT_VISIT.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(ORM_O01.MSH.7, ORM_O01.MSH.10)
  root Provenance: segments::MSH_Provenance(ORM_O01.MSH, PatientReference)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(ORM_O01.PATIENT.PID.18, PatientReference))

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(ORM_O01.PATIENT.PID.34, ORM_O01.PATIENT.PID.33, PatientReference))

  var ConditionReference: utilities::OutputResourceAndGetReference(segments::DG1_Condition(ORM_O01.ORDER[*].ORDER_DETAIL.DG1[*][], PatientReference)[])

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(ORM_O01.PATIENT.PATIENT_VISIT.PV1, ORM_O01.ORDER[*].ORDER_DETAIL.DG1[*], ORM_O01.MSH.9, {}, PatientReference, ConditionReference))

  var GuarantorReference: utilities::OutputResourceAndGetReference(segments::GT1_RelatedPerson(ORM_O01.PATIENT.GT1, PatientReference))

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(ORM_O01.PATIENT.AL1[], PatientReference)[])

  var CoverageReference: utilities::OutputResourceAndGetReference(segments::IN1_Coverage(ORM_O01.PATIENT.INSURANCE[*].IN1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(ORM_O01.ORDER[*].ORDER_DETAIL.OBSERVATION[*].OBX[], PatientReference)[])

  var ServiceRequestReference: utilities::OutputResourceAndGetReference(segments::ORC_OBR_ServiceRequest(ORM_O01.ORDER[*].ORC[], ORM_O01.ORDER[*].ORDER_DETAIL.CHOICE.OBR[], {}, PatientReference)[])

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::ORC_Provenance(ORM_O01.ORDER[*].ORC[], ServiceRequestReference[])[])
}
