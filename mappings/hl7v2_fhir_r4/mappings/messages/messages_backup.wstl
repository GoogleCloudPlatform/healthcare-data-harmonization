package messages

import "./segments/segments.wstl"
import "./datatypes/datatypes.wstl"
import "./groups/groups.wstl"

// Description: Define ADT_Axx HL7v2 Message Types (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A01 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Coverage: https://www.hl7.org/fhir/coverage.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def Transform_ADT(required ADT) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ADT.MSH))

  var Patient: segments::PID_PD1_Patient(ADT.PID, ADT.PD1)
  var Patient.contact[]: if ADT.NK1 then datatypes::NK1_Contact(ADT.NK1[])
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(ADT.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(ADT.MSH.7, ADT.MSH.10)
  root Provenance: segments::MSH_Provenance(ADT.MSH, PatientReference)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(ADT.PID.18, PatientReference))

  var RelatedPersonReference: utilities::OutputResourceAndGetReference(segments::PID_RelatedPersonMother(ADT.PID.21, PatientReference))

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(ADT.PID.34, ADT.PID.33, PatientReference))

  var RelatedPersonReference: utilities::OutputResourceAndGetReference(segments::NK1_RelatedPerson(ADT.NK1[], PatientReference)[])

  var ConditionReference: utilities::OutputResourceAndGetReference(segments::DG1_Condition(ADT.DG1[], PatientReference)[])

  // Encounter Resource should not be created if PV1-2 - Patient Class values to N - not applicable.
  // "Not Applicable" is used only in cases where the PV1 segment itself is not applicable but is retained in the message definitions for backwards compatibility.
  if ADT.PV1.2.1 != "N" then {
    var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(ADT.PV1, ADT.DG1, ADT.MSH.9, ADT.EVN.2, PatientReference, ConditionReference))
  }
  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::EVN_Provenance(ADT.EVN, ADT.MSH, MessageHeaderReference))

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(ADT.AL1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(ADT.OBX[], PatientReference)[])

  var ProcedureReference: utilities::OutputResourceAndGetReference(segments::PR1_Procedure(ADT.PROCEDURE[*].PR1[], PatientReference)[])

  var GuarantorReference: utilities::OutputResourceAndGetReference(segments::GT1_RelatedPerson(ADT.GT1[], PatientReference)[])

  var CoverageReference: utilities::OutputResourceAndGetReference(segments::IN1_Coverage(ADT.INSURANCE[*].IN1[], PatientReference)[])
}

// Description: Define ADT_A01 HL7v2 Message Type (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A01 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A01(required ADT_A01) {
  $this: Transform_ADT(ADT_A01)
}

// Description: Define ADT_A02 HL7v2 Message Type (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A02 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A02(required ADT_A02) {
  Transform_ADT(ADT_A02)
}

// Description: Define ADT_A03 HL7v2 Message Type (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A03 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A03(required ADT_A03) {
  $this: Transform_ADT(ADT_A03)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A04 HL7v2 Message Type (version 2.9)
//   ADT_A04 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A04(required ADT_A04) {
  $this: Transform_ADT(ADT_A04)
}

// Description: Define ADT_A05 HL7v2 Message Type (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A05 HL7v2 Message Type (version 2.9)
//   ADT_A05 Segments covered in this mapping configuration are: MSH, EVN, NK1, PID, PD1, DG1, PV1, AL1, OBX, PR1
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Procedure: https://www.hl7.org/fhir/procedure.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A05(required ADT_A05) {
  Transform_ADT(ADT_A05)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A06 HL7v2 Message Type (version 2.9)
//   ADT_A06 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Procedure: https://www.hl7.org/fhir/procedure.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A06(required ADT_A06) {
  Transform_ADT(ADT_A06)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A07 HL7v2 Message Type (version 2.9)
//   ADT_A07 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Procedure: https://www.hl7.org/fhir/procedure.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A07(required ADT_A07) {
  Transform_ADT(ADT_A07)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A08 HL7v2 Message Type (version 2.9)
//   ADT_A08 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A08(required ADT_A08) {
  $this: Transform_ADT(ADT_A08)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A09 HL7v2 Message Type (version 2.9)
//   ADT_A09 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A09(required ADT_A09) {
  Transform_ADT(ADT_A09)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A11 HL7v2 Message Type (version 2.9)
//   ADT_A11 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A11(required ADT_A11) {
  Transform_ADT(ADT_A11)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A12 HL7v2 Message Type (version 2.9)
//   ADT_A12 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A12(required ADT_A12) {
  Transform_ADT(ADT_A12)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A13 HL7v2 Message Type (version 2.9)
//   ADT_A13 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A13(required ADT_A13) {
  Transform_ADT(ADT_A13)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A14 HL7v2 Message Type (version 2.9)
//   ADT_A14 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Procedure: https://www.hl7.org/fhir/procedure.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A14(required ADT_A14) {
  Transform_ADT(ADT_A14)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A17 HL7v2 Message Type (version 2.9)
//   ADT_A17 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def ADT_A17(required ADT_A17) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ADT_A17.MSH))
  root Bundle: segments::MSH_Bundle(ADT_A17.MSH.7, ADT_A17.MSH.10)
  root Provenance: segments::MSH_Provenance(ADT_A17.MSH, {})

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::EVN_Provenance(ADT_A17.EVN, ADT_A17.MSH, MessageHeaderReference))

  var Patient: segments::PID_PD1_Patient(ADT_A17.PID_1, ADT_A17.PD1_1)
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(ADT_A17.PV1_1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(ADT_A17.PID_1.18, PatientReference))

  var RelatedPersonReference: utilities::OutputResourceAndGetReference(segments::PID_RelatedPersonMother(ADT_A17.PID_1.21, PatientReference))

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(ADT_A17.PID_1.34, ADT_A17.PID_1.33, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(ADT_A17.PV1_1, {}, ADT_A17.MSH.9, ADT_A17.EVN.2, PatientReference, {}))   // Passing {} since DG1 not present

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(ADT_A17.OBX_1[], PatientReference)[])

  var Patient: segments::PID_PD1_Patient(ADT_A17.PID_2, ADT_A17.PD1_2)
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(ADT_A17.PV1_2.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(ADT_A17.PID_2.18, PatientReference))

  var RelatedPersonReference: utilities::OutputResourceAndGetReference(segments::PID_RelatedPersonMother(ADT_A17.PID_2.21, PatientReference))

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(ADT_A17.PID_2.34, ADT_A17.PID_2.33, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(ADT_A17.PV1_2, {}, ADT_A17.MSH.9, ADT_A17.EVN.2, PatientReference, {}))   // Passing {} since DG1 not present

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(ADT_A17.OBX_2[], PatientReference)[])
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A18 HL7v2 Message Type (version 2.9)
//   ADT_A18 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A18(required ADT_A18) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ADT_A18.MSH))

  var Patient: segments::PID_PD1_Patient(ADT_A18.PID, ADT_A18.PD1)
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(ADT_A18.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(ADT_A18.MSH.7, ADT_A18.MSH.10)
  root Provenance: segments::MSH_Provenance(ADT_A18.MSH, PatientReference)

  // Encounter resource should not be created if PV1-2 - Patient Class values to N - not applicable.
  // "Not Applicable" is used only in cases where the PV1 segment itself is not applicable but is retained in the message definitions for backwards compatibility.
  if ADT_A18.PV1.2.1 != "N" then {
    var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(ADT_A18.PV1, {}, ADT_A18.MSH.9, ADT_A18.EVN.2, PatientReference, {}))
  }
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A28 HL7v2 Message Type (version 2.9)
//   ADT_A28 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A28(required ADT_A28) {
  Transform_ADT(ADT_A28)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A31 HL7v2 Message Type (version 2.9)
//   ADT_A31 Segments covered in this mapping configuration are: MSH, PID, PD1, DG1, PV1, AL1, OBX
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   EpisodeOfCare: https://www.hl7.org/fhir/episodeofcare.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//
def ADT_A31(required ADT_A31) {
  Transform_ADT(ADT_A31)
}

// Description: Define HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ADT_A47 HL7v2 Message Type (version 2.9)
//   ADT_A47 Segments covered in this mapping configuration are: MSH, PID, PD1
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def ADT_A47(required ADT_A47) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ADT_A47.MSH))

  var PatientReference: utilities::OutputResourceAndGetReference(segments::PID_PD1_Patient(ADT_A47.PATIENT[*].PID[], ADT_A47.PATIENT[*].PD1[])[])

  root Bundle: segments::MSH_Bundle(ADT_A47.MSH.7, ADT_A47.MSH.10)
  root Provenance: segments::MSH_Provenance(ADT_A47.MSH, PatientReference[0])

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(ADT_A47.PATIENT[*].PID.34[], ADT_A47.PATIENT[*].PID.33[], PatientReference[])[])
}

// Description: Define ORU_R01 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ORU_R01 HL7v2 Message Type (version 2.9)
//   ORU_R01 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//   Specimen : https://hl7.org/fhir/specimen.html
//
def ORU_R01(required ORU_R01) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ORU_R01.MSH))

  var PatientReference: groups::Parse_PATIENT_RESULT(ORU_R01.PATIENT_RESULT[], ORU_R01.MSH.9, {})

  root Bundle: segments::MSH_Bundle(ORU_R01.MSH.7, ORU_R01.MSH.10)
  root Provenance: segments::MSH_Provenance(ORU_R01.MSH, PatientReference[0])
}

// Description: Define OML_O21 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   OML_O21 HL7v2 Message Type (version 2.9)
//   OML_O21 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Coverage: https://www.hl7.org/fhir/coverage.html
//   Device : https://www.hl7.org/fhir/device.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   Specimen : https://hl7.org/fhir/specimen.html
//
def OML_O21(required OML_O21) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(OML_O21.MSH))

  var Patient: segments::PID_PD1_Patient(OML_O21.PATIENT.PID, OML_O21.PATIENT.PD1)
  var Patient.contact[]: if OML_O21.PATIENT.NK1 then datatypes::NK1_Contact(OML_O21.PATIENT.NK1[])
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(OML_O21.PATIENT.PATIENT_VISIT.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(OML_O21.MSH.7, OML_O21.MSH.10)
  root Provenance: segments::MSH_Provenance(OML_O21.MSH, PatientReference)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(OML_O21.PATIENT.PID.18, PatientReference))

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(OML_O21.PATIENT.PID.34, OML_O21.PATIENT.PID.33, PatientReference))

  var RelatedPersonReference: utilities::OutputResourceAndGetReference(segments::NK1_RelatedPerson(OML_O21.PATIENT.NK1[], PatientReference)[])

  var ConditionReference: utilities::OutputResourceAndGetReference(segments::DG1_Condition(OML_O21.ORDER[*].OBSERVATION_REQUEST.DG1[*][], PatientReference)[])

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(OML_O21.PATIENT.PATIENT_VISIT.PV1, OML_O21.ORDER[*].OBSERVATION_REQUEST.DG1[], OML_O21.MSH.9, {}, PatientReference, ConditionReference)[])

  var GuarantorReference: utilities::OutputResourceAndGetReference(segments::GT1_RelatedPerson(OML_O21.PATIENT.GT1, PatientReference))

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(OML_O21.PATIENT.AL1[], PatientReference)[])

  var CoverageReference: utilities::OutputResourceAndGetReference(segments::IN1_Coverage(OML_O21.PATIENT.INSURANCE[*].IN1[], PatientReference)[])

  $this: groups::Parse_ORDER(OML_O21.ORDER[], PatientReference, ConditionReference)
}

// Description: Define ORM_O01 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   ORM_O01 HL7v2 Message Type (version 2.9)
//   ORM_O01 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Coverage: https://www.hl7.org/fhir/coverage.html
//   Device : https://www.hl7.org/fhir/device.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   Specimen : https://hl7.org/fhir/specimen.html
//
def ORM_O01(required ORM_O01) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(ORM_O01.MSH))

  var Patient: segments::PID_PD1_Patient(ORM_O01.PATIENT.PID, ORM_O01.PATIENT.PD1)
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(ORM_O01.PATIENT.PATIENT_VISIT.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(ORM_O01.MSH.7, ORM_O01.MSH.10)
  root Provenance: segments::MSH_Provenance(ORM_O01.MSH, PatientReference)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(ORM_O01.PATIENT.PID.18, PatientReference))

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(ORM_O01.PATIENT.PID.34, ORM_O01.PATIENT.PID.33, PatientReference))

  var ConditionReference: utilities::OutputResourceAndGetReference(segments::DG1_Condition(ORM_O01.ORDER[*].ORDER_DETAIL.DG1[*][], PatientReference)[])

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(ORM_O01.PATIENT.PATIENT_VISIT.PV1, ORM_O01.ORDER[*].ORDER_DETAIL.DG1[*], ORM_O01.MSH.9, {}, PatientReference, ConditionReference))

  var GuarantorReference: utilities::OutputResourceAndGetReference(segments::GT1_RelatedPerson(ORM_O01.PATIENT.GT1, PatientReference))

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(ORM_O01.PATIENT.AL1[], PatientReference)[])

  var CoverageReference: utilities::OutputResourceAndGetReference(segments::IN1_Coverage(ORM_O01.PATIENT.INSURANCE[*].IN1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(ORM_O01.ORDER[*].ORDER_DETAIL.OBSERVATION[*].OBX[], PatientReference)[])

  var ServiceRequestReference: utilities::OutputResourceAndGetReference(segments::ORC_OBR_ServiceRequest(ORM_O01.ORDER[*].ORC[], ORM_O01.ORDER[*].ORDER_DETAIL.CHOICE.OBR[], {}, PatientReference)[])

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::ORC_Provenance(ORM_O01.ORDER[*].ORC[], ServiceRequestReference[])[])
}

// Description: Define RDE_O01 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   RDE_O01 HL7v2 Message Type (version 2.9)
//   RDE_O01 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Coverage: https://www.hl7.org/fhir/coverage.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   MedicationRequest: https://www.hl7.org/fhir/medicationrequest.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   ServiceRequest: https://www.hl7.org/fhir/servicerequest.html
//
def Transform_RDE(RDE) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(RDE.MSH))

  var Patient: segments::PID_PD1_Patient(RDE.PATIENT.PID, RDE.PATIENT.PD1)
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(RDE.PATIENT.PATIENT_VISIT.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(RDE.MSH.7, RDE.MSH.10)
  root Provenance: segments::MSH_Provenance(RDE.MSH, PatientReference)

  var AccountReference: utilities::OutputResourceAndGetReference(segments::PID_Account(RDE.PATIENT.PID.18, PatientReference))
  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(RDE.PATIENT.PID.34, RDE.PATIENT.PID.33, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(RDE.PATIENT.PATIENT_VISIT.PV1, {}, RDE.MSH.9, {}, PatientReference, {}))

  var GuarantorReference: utilities::OutputResourceAndGetReference(segments::GT1_RelatedPerson(RDE.PATIENT.GT1, PatientReference))

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(RDE.PATIENT.AL1[], PatientReference)[])

  var CoverageReference: utilities::OutputResourceAndGetReference(segments::IN1_Coverage(RDE.PATIENT.INSURANCE[*].IN1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(RDE.ORDER[*].OBSERVATION[*].OBX[], PatientReference)[])

  var MedicationRequestReference: utilities::OutputResourceAndGetReference(segments::ORC_RXR_MedicationRequest(RDE.ORDER[*].ORC[], RDE.ORDER[*].ORDER_DETAIL.RXR[], PatientReference)[])

  var MedicationRequestReference: utilities::OutputResourceAndGetReference(segments::RXE_RXR_MedicationRequest(RDE.ORDER[*].RXE[], RDE.ORDER[*].RXR[], PatientReference)[])
}

// Description: Define RDE_O01 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   RDE_O01 HL7v2 Message Type (version 2.9)
//   RDE_O01 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   Specimen : https://hl7.org/fhir/specimen.html
//
def RDE_O01(RDE_O01) {
  $this: Transform_RDE(RDE_O01)
}

// Description: Define RDE_O11 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   RDE_O11 HL7v2 Message Type (version 2.9)
//   RDE_O11 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   Specimen : https://hl7.org/fhir/specimen.html
//
def RDE_O11(RDE_O11) {
  $this: Transform_RDE(RDE_O11)
}

// Description: Define RAS_O17 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   RAS_O17 HL7v2 Message Type (version 2.9)
//   RAS_O17 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   MedicationRequest: https://www.hl7.org/fhir/medicationrequest.html
//   MedicationAdministration: https://www.hl7.org/fhir/medicationadministration.html
//
def RAS_O17(RAS_O17) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(RAS_O17.MSH))

  var PatientReference: utilities::OutputResourceAndGetReference(segments::PID_PD1_Patient(RAS_O17.PATIENT.PID, RAS_O17.PATIENT.ADDITIONAL_DEMOGRAPHICS.PD1))

  root Bundle: segments::MSH_Bundle(RAS_O17.MSH.7, RAS_O17.MSH.10)
  root Provenance: segments::MSH_Provenance(RAS_O17.MSH, PatientReference)

  var AccountResource: utilities::OutputResourceAndGetReference(segments::PID_Account(RAS_O17.PATIENT.PID.18, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(RAS_O17.PATIENT.PATIENT_VISIT.PV1, {}, RAS_O17.MSH.9, {}, PatientReference, {})) // Passing {} since DG1 not present

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(RAS_O17.PATIENT.AL1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(RAS_O17.ORDER[*].ADMINISTRATION[*].OBSERVATION[*].OBX[], PatientReference)[])

  var MedicationRequestReference1[]: utilities::OutputResourceAndGetReference(segments::ORC_RXR_MedicationRequest(RAS_O17.ORDER[*].ORC[], RAS_O17.ORDER[*].ORDER_DETAIL.ORDER_DETAIL_SUPPLEMENT.RXR[], PatientReference)[])

  var MedicationRequestReference2[]: utilities::OutputResourceAndGetReference(segments::RXE_RXR_MedicationRequest(RAS_O17.ORDER[*].ENCODING.RXE[], RAS_O17.ORDER[*].ENCODING.RXR[], PatientReference)[])

  var MedicationRequest: MedicationRequestReference2[0]
  if !MedicationRequest then {
    var MedicationRequest: MedicationRequestReference1[0]
  }
  var MedicationAdministrationReference: utilities::OutputResourceAndGetReference(segments::RXA_ORC_RXR_MedicationAdministration(RAS_O17.ORDER[*].ADMINISTRATION[*].RXA[*][], RAS_O17.ORDER[*].ORC[], RAS_O17.ORDER[*].ADMINISTRATION[*].RXR[], PatientReference, EncounterReference, MedicationRequest)[])
}

// Description: Define SIU_Sxx HL7v2 Message Types (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   SIU_S12 Segments covered in this mapping configuration are: MSH, SCH, NTE, PID, PV1, OBX, DG1, AIS, AIG, AIL, AIP
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def Transform_SIU(required SIU) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(SIU.MSH))

  var PatientReference[]: groups::Parse_PATIENT(SIU.PATIENT[], SIU.MSH.9, {})

  root Bundle: segments::MSH_Bundle(SIU.MSH.7, SIU.MSH.10)
  root Provenance: segments::MSH_Provenance(SIU.MSH, PatientReference[0])

  var ServiceRequestReference: utilities::OutputResourceAndGetReference(segments::SCH_ServiceRequest(SIU.SCH, PatientReference[0]))
  var Appointment: segments::SCH_Appointment(SIU.SCH, SIU.RESOURCES, PatientReference, ServiceRequestReference)
  var AppointmentReference: utilities::OutputResourceAndGetReference(Appointment)
}

// Description: Define SIU_S12 HL7v2 Message Types (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   SIU_S12 Segments covered in this mapping configuration are: MSH, SCH, NTE, PID, PV1, OBX, DG1, AIS, AIG, AIL, AIP
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def SIU_S12(required SIU_S12) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(SIU_S12.MSH))

  var PatientReference: groups::Parse_PATIENT(SIU_S12.PATIENT[], SIU_S12.MSH.9, {})

  root Bundle: segments::MSH_Bundle(SIU_S12.MSH.7, SIU_S12.MSH.10)
  root Provenance: segments::MSH_Provenance(SIU_S12.MSH, PatientReference[0])

  var ServiceRequestReference: utilities::OutputResourceAndGetReference(segments::SCH_ServiceRequest(SIU_S12.SCH, PatientReference[0]))
  var Appointment: segments::SCH_Appointment(SIU_S12.SCH, SIU_S12.RESOURCES, PatientReference, ServiceRequestReference)
  var AppointmentReference: utilities::OutputResourceAndGetReference(Appointment)
}

// Description: Define SIU_S13 HL7v2 Message Types (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   SIU_S13 Segments covered in this mapping configuration are: MSH, SCH, NTE, PID, PV1, OBX, DG1, AIS, AIG, AIL, AIP
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def SIU_S13(required SIU_S13) {
  Transform_SIU(SIU_S13)
}

// Description: Define SIU_S14 HL7v2 Message Types (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   SIU_S14 Segments covered in this mapping configuration are: MSH, SCH, NTE, PID, PV1, OBX, DG1, AIS, AIG, AIL, AIP
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def SIU_S14(required SIU_S14) {
  Transform_SIU(SIU_S14)
}

// Description: Define VXU_V04 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   VXU_V04 HL7v2 Message Type (version 2.9)
//   VXU_V04 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Coverage: https://www.hl7.org/fhir/coverage.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def VXU_V04(VXU_V04) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(VXU_V04.MSH))

  var Patient: segments::PID_PD1_Patient(VXU_V04.PID, VXU_V04.PD1)
  var Patient.contact[]: if VXU_V04.NK1 then datatypes::NK1_Contact(VXU_V04.NK1[])
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(VXU_V04.PATIENT_VISIT.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(VXU_V04.MSH.7, VXU_V04.MSH.10)
  root Provenance: segments::MSH_Provenance(VXU_V04.MSH, PatientReference)

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(VXU_V04.PID.34, VXU_V04.PID.33, PatientReference))

  var RelatedPersonReference: utilities::OutputResourceAndGetReference(segments::NK1_RelatedPerson(VXU_V04.NK1[], PatientReference)[])

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(VXU_V04.PATIENT_VISIT.PV1, {}, VXU_V04.MSH.9, {}, PatientReference, {}))

  var GuarantorReference: utilities::OutputResourceAndGetReference(segments::GT1_RelatedPerson(VXU_V04.GT1[], PatientReference)[])

  var CoverageReference: utilities::OutputResourceAndGetReference(segments::IN1_Coverage(VXU_V04.INSURANCE[*].IN1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(VXU_V04.PERSON_OBSERVATION[*].OBX[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(VXU_V04.ORDER[*].OBSERVATION[*].OBX[], PatientReference)[])

  var ServiceRequestReference: utilities::OutputResourceAndGetReference(segments::ORC_OBR_ServiceRequest(VXU_V04.ORDER[*].ORC[], {}, {}, PatientReference)[])   // passing {} since OBR  and TQ1 not present

  var ImmunizationReference: utilities::OutputResourceAndGetReference(segments::ORDER_Immunization(VXU_V04.ORDER[], PatientReference)[])
}

// Description: Define MDM_T02 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   MDM_T02 HL7v2 Message Type (version 2.9)
//   MDM_T02 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Device : https://www.hl7.org/fhir/device.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   RelatedPerson: https://www.hl7.org/fhir/stu3/relatedperson.html
//   Specimen : https://hl7.org/fhir/specimen.html
//
def MDM_T02(required MDM_T02) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(MDM_T02.MSH))

  var Patient: segments::PID_PD1_Patient(MDM_T02.PID, {})
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(MDM_T02.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(MDM_T02.MSH.7, MDM_T02.MSH.10)
  root Provenance: segments::MSH_Provenance(MDM_T02.MSH, PatientReference)

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(MDM_T02.PID.34, MDM_T02.PID.33, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(MDM_T02.PV1, {}, MDM_T02.MSH.9, MDM_T02.EVN.2, PatientReference, {}))

  var ServiceRequestReference[]: utilities::OutputResourceAndGetReference(segments::ORC_OBR_ServiceRequest(MDM_T02.COMMON_ORDER[*].ORC[], MDM_T02.COMMON_ORDER[*].OBR[], {}, PatientReference)[])

  var ObservationReference[]: groups::PARSE_OBSERVATION(MDM_T02.OBSERVATION[], PatientReference, EncounterReference)

  var DiagnosticReport: segments::TXA_DiagnosticReport(MDM_T02.TXA, PatientReference, EncounterReference)
  var DiagnosticReport.basedOn[]: ServiceRequestReference[]
  var DiagnosticReport.result[]: ObservationReference[]
  var DiagnosticReportReference: utilities::OutputResourceAndGetReference(DiagnosticReport)
}

// Description: Define PPR_PC1 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   PPR_PC1 HL7v2 Message Type (version 2.9)
//   PPR_PC1 Segments covered in this mapping configuration are: MSH, PID, PV1, PRB, GOL, OBX, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Condition: https://www.hl7.org/fhir/condition.html
//   Device : https://www.hl7.org/fhir/device.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Organization: https://www.hl7.org/fhir/organization.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   ServiceRequest: https://www.hl7.org/fhir/servicerequest.html
//
def PPR_PC1(required PPR_PC1) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(PPR_PC1.MSH))

  var Patient: segments::PID_PD1_Patient(PPR_PC1.PID, {})
  var Patient.extension[]: if PPR_PC1.PATIENT_VISIT.PV1.16 then utilities::Build_Extension(datatypes::CWE_CodeableConcept(PPR_PC1.PATIENT_VISIT.PV1.16), "codeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(PPR_PC1.MSH.7, PPR_PC1.MSH.10)
  root Provenance: segments::MSH_Provenance(PPR_PC1.MSH, PatientReference)

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(PPR_PC1.PATIENT_VISIT.PV1, {}, PPR_PC1.MSH.9, {}, PatientReference, {}))  // passing {} since DG1 not present

  $this: groups::Parse_PROBLEM(PPR_PC1.PROBLEM[], PatientReference, EncounterReference)
}
