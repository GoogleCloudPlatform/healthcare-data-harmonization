package messages

// Description: Define MDM_T02 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   MDM_T02 HL7v2 Message Type (version 2.9)
//   MDM_T02 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, OBR, ORC
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   DiagnosticReport: https://hl7.org/fhir/diagnosticreport.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   ServiceRequest: https://www.hl7.org/fhir/servicerequest.html
//
def MDM_T02(required MDM_T02) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(MDM_T02.MSH))

  var Patient: segments::PID_PD1_Patient(MDM_T02.PID, {})
  var Patient.extension[]: utilities::Build_Extension(datatypes::CWE_CodeableConcept(MDM_T02.PV1.16), "CodeableConcept", "http://hl7.org/fhir/StructureDefinition/patient-importance")
  var PatientReference: utilities::OutputResourceAndGetReference(Patient)

  root Bundle: segments::MSH_Bundle(MDM_T02.MSH.7, MDM_T02.MSH.10)
  root Provenance: segments::MSH_Provenance(MDM_T02.MSH, PatientReference)

  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::PID_Provenance(MDM_T02.PID.34, MDM_T02.PID.33, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(MDM_T02.PV1, {}, MDM_T02.MSH.9, MDM_T02.EVN.2, PatientReference, {}))

  var ServiceRequestReference[]: utilities::OutputResourceAndGetReference(segments::ORC_OBR_ServiceRequest(MDM_T02.COMMON_ORDER[*].ORC[], MDM_T02.COMMON_ORDER[*].OBR[], {}, PatientReference)[])

  var ObservationReference[]: groups::PARSE_OBSERVATION(MDM_T02.OBSERVATION[], PatientReference, EncounterReference)

  var DiagnosticReport: segments::TXA_DiagnosticReport(MDM_T02.TXA, PatientReference, EncounterReference)
  var DiagnosticReport.basedOn[]: ServiceRequestReference[]
  var DiagnosticReport.result[]: ObservationReference[]
  var DiagnosticReportReference: utilities::OutputResourceAndGetReference(DiagnosticReport)
}
