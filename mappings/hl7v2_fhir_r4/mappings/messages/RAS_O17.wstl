package messages

// Description: Define RAS_O17 HL7v2 (version 2.9) to FHIR R4 transformation
//
// Argument(s):
//   RAS_O17 HL7v2 Message Type (version 2.9)
//   RAS_O17 Segments covered in this mapping configuration are: MSH, PID, PD1, PV1, OBX, ORC, AL1, RXE, RXA, RXR
//
// Output(s):
//   FHIR R4 Resources : http://www.hl7.org/fhir/resourcelist.html
// List of Generated FHIR Resources:
//   Account: https://www.hl7.org/fhir/account.html
//   AllergyIntolerance: https://www.hl7.org/fhir/allergyintolerance.html
//   Bundle: https://www.hl7.org/fhir/bundle.html
//   Encounter: https://www.hl7.org/fhir/encounter.html
//   Location: https://www.hl7.org/fhir/location.html
//   MessageHeader: https://www.hl7.org/fhir/messageheader.html
//   Observation: https://www.hl7.org/fhir/observation.html
//   Patient: https://www.hl7.org/fhir/patient.html
//   Practitioner: https://www.hl7.org/fhir/practitioner.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//   MedicationRequest: https://www.hl7.org/fhir/medicationrequest.html
//   MedicationAdministration: https://www.hl7.org/fhir/medicationadministration.html
//
def RAS_O17(RAS_O17) {
  var MessageHeaderReference: utilities::OutputResourceAndGetReference(segments::MSH_MessageHeader(RAS_O17.MSH))

  var PatientReference: utilities::OutputResourceAndGetReference(segments::PID_PD1_Patient(RAS_O17.PATIENT.PID, RAS_O17.PATIENT.ADDITIONAL_DEMOGRAPHICS.PD1))

  root Bundle: segments::MSH_Bundle(RAS_O17.MSH.7, RAS_O17.MSH.10)
  root Provenance: segments::MSH_Provenance(RAS_O17.MSH, PatientReference)

  var AccountResource: utilities::OutputResourceAndGetReference(segments::PID_Account(RAS_O17.PATIENT.PID.18, PatientReference))

  var EncounterReference: utilities::OutputResourceAndGetReference(segments::PV1_DG1_Encounter(RAS_O17.PATIENT.PATIENT_VISIT.PV1, {}, RAS_O17.MSH.9, {}, PatientReference, {})) // Passing {} since DG1 not present

  var AllergyIntoleranceReference: utilities::OutputResourceAndGetReference(segments::AL1_AllergyIntolerance(RAS_O17.PATIENT.AL1[], PatientReference)[])

  var ObservationReference: utilities::OutputResourceAndGetReference(segments::OBX_Observation(RAS_O17.ORDER[*].ADMINISTRATION[*].OBSERVATION[*].OBX[], PatientReference)[])

  var MedicationRequestReference1[]: utilities::OutputResourceAndGetReference(segments::ORC_RXR_MedicationRequest(RAS_O17.ORDER[*].ORC[], RAS_O17.ORDER[*].ORDER_DETAIL.ORDER_DETAIL_SUPPLEMENT.RXR[], PatientReference)[])

  var MedicationRequestReference2[]: utilities::OutputResourceAndGetReference(segments::RXE_RXR_MedicationRequest(RAS_O17.ORDER[*].ENCODING.RXE[], RAS_O17.ORDER[*].ENCODING.RXR[], PatientReference)[])

  var MedicationRequest: MedicationRequestReference2[0]
  if !MedicationRequest then {
    var MedicationRequest: MedicationRequestReference1[0]
  }
  var MedicationAdministrationReference: utilities::OutputResourceAndGetReference(segments::RXA_ORC_RXR_MedicationAdministration(RAS_O17.ORDER[*].ADMINISTRATION[*].RXA[*][], RAS_O17.ORDER[*].ORC[], RAS_O17.ORDER[*].ADMINISTRATION[*].RXR[], PatientReference, EncounterReference, MedicationRequest)[])
}
