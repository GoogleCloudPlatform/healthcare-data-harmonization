package groups

// Description: Parse ORDER group, and constructs FHIR R4 Resources based on OBX, OBR, ORC, NTE and SPM sub-segments
//
// Argument(s):
//   ORDER Group
//   Patient Resource already constructed through PID_PD1_Patient Projector: https://www.hl7.org/fhir/patient.html
//   Condition Resource already constructed through DG1_Condition Projector: https://www.hl7.org/fhir/condition.html
//
// Output(s):
//   Observation: https://www.hl7.org/fhir/observation.html
//   Specimen : https://hl7.org/fhir/specimen.html
//   ServiceRequest: https://www.hl7.org/fhir/servicerequest.html
//   Provenance: https://www.hl7.org/fhir/provenance.html
//
def Parse_ORDER(ORDER, PatientReference, ConditionReference) {
  // Outputting the resource adds it to the bundle and assigns the ids. The resource
  // must not be modified after it is output.
  var ObservationReference[]: PARSE_OBSERVATION(ORDER.OBSERVATION_REQUEST.OBSERVATION[], PatientReference, {})
  // Outputting the resource adds it to the bundle and assigns the ids. The resource
  // must not be modified after it is output.
  var SpecimenReference: utilities::OutputResourceAndGetReference(segments::OBR_Specimen(ORDER.OBSERVATION_REQUEST.OBR, PatientReference))
  // Outputting the resource adds it to the bundle and assigns the ids. The resource
  // must not be modified after it is output.
  var SpecimenReference: utilities::OutputResourceAndGetReference(segments::SPM_Specimen(ORDER.OBSERVATION_REQUEST.SPECIMEN[*].SPM[], PatientReference)[])

  var ServiceRequest: segments::ORC_OBR_ServiceRequest(ORDER.ORC, ORDER.OBSERVATION_REQUEST.OBR, ORDER.TIMING[0].TQ1, PatientReference)
  var ServiceRequest.reasonReference[]: ConditionReference[]
  var ServiceRequest.supportingInfo[]: ObservationReference[]
  var ServiceRequest.specimen[]: SpecimenReference[]
  var ServiceRequest.note: datatypes::NTE_Annotation(ORDER.OBSERVATION_REQUEST.NTE[])
  // Outputting the resource adds it to the bundle and assigns the ids. The resource
  // must not be modified after it is output.
  var ServiceRequestReference: utilities::OutputResourceAndGetReference(ServiceRequest)

  // Outputting the resource adds it to the bundle and assigns the ids. The resource
  // must not be modified after it is output.
  var ProvenanceReference: utilities::OutputResourceAndGetReference(segments::ORC_Provenance(ORDER.ORC, ServiceRequestReference))
}
