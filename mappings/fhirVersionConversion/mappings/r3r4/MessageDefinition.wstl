package fhir_r3r4

import "../ResourceBase.wstl"

// Description: Maps the common fields in FHIR STU3 and FHIR R4
//
// Argument(s):
//   messageDefiniton : FHIR MessageDefiniton resource
//
// Output(s):
//   FHIR MessageDefiniton Resource
//
def MessageDefinitionBase(messageDefinition) {
  resourcebase::ResourceBase(messageDefinition)
  url: messageDefinition.url
  version: messageDefinition.version
  name: messageDefinition.name
  title: messageDefinition.title
  date: messageDefinition.date
  publisher: messageDefinition.publisher
  contact: messageDefinition.contact
  description: messageDefinition.description
  useContext: messageDefinition.useContext
  jurisdiction: messageDefinition.jurisdiction
  purpose: messageDefinition.purpose
  copyright: messageDefinition.copyright
}

// Description: Converts a FHIR STU3 MessageDefinition resource to FHIR R4 MessageDefinition resource.
//
// Argument(s):
//   messageDefinition : FHIR STU3 MessageDefinition resource https://www.hl7.org/fhir/stu3/messagedefinition.html
//
// Output(s):
//   FHIR R4 MessageDefinition Resource https://www.hl7.org/fhir/r4/messagedefinition.html
//
def R3MessageDefinitionToR4(messageDefinition) {
  MessageDefinitionBase(messageDefinition)
  contained: datatypes::R3ResourceToR4(messageDefinition.contained[])
  identifier: R3MessageDefinition_IdentifierToR4("https://www.hl7.org/fhir/R4/messagedefinition-definitions.html#MessageDefinition.identifier", messageDefinition.extension, messageDefinition.identifier)
  status: messageDefinition.status
  experimental: messageDefinition.experimental
  base: datatypes::ReferenceToCanonical(messageDefinition.base)
  parent: datatypes::ReferenceToCanonical(messageDefinition.parent[])
  replaces: datatypes::ReferenceToCanonical(messageDefinition.replaces[])
  eventCoding: messageDefinition.event
  eventUri: extension::fetchUri("https://www.hl7.org/fhir/R4/messagedefinition-definitions.html#MessageDefinition.eventUri", messageDefinition.extension)
  category: messageDefinition.category
  focus: R3MessageDefinition_FocusToR4(messageDefinition.focus[])
  responseRequired: R3MessageDefinition_ResponseRequiredToR4(messageDefinition.responseRequired)
  allowedResponse: R3MessageDefinition_AllowedResponseToR4(messageDefinition.allowedResponse[])
  graph: extension::fetchCanonicalArray("https://www.hl7.org/fhir/R4/messagedefinition-definitions.html#MessageDefinition.graph", messageDefinition.extension)
}

// Description: Converts a FHIR R4 MessageDefinition resource to FHIR STU3 MessageDefinition resource.
//
// Argument(s):
//   messageDefinition : FHIR R4 MessageDefinition resource https://www.hl7.org/fhir/r4/messagedefinition.html
//
// Output(s):
//   FHIR STU3 MessageDefinition Resource https://www.hl7.org/fhir/stu3/messagedefinition.html
//
def R4MessageDefinitionToR3(messageDefinition) {
  MessageDefinitionBase(messageDefinition)
  contained: datatypes::R4ResourceToR3(messageDefinition.contained[])
  identifier: messageDefinition.identifier[0]
  status: messageDefinition.status
  experimental: messageDefinition.experimental
  base: datatypes::CanonicalToReference(messageDefinition.base)
  parent: datatypes::CanonicalToReference(messageDefinition.parent[])
  replaces: datatypes::CanonicalToReference(messageDefinition.replaces[])
  event: messageDefinition.eventCoding
  category: messageDefinition.category
  focus: R4MessageDefinition_FocusToR3(messageDefinition.focus[])
  responseRequired: R4MessageDefinition_ResponseRequiredToR3(messageDefinition.responseRequired)
  allowedResponse: R4MessageDefinition_AllowedResponseToR3(messageDefinition.allowedResponse[])
  extension[]: extension::BuildIdentifierExtension("https://www.hl7.org/fhir/R4/messagedefinition-definitions.html#MessageDefinition.identifier", messageDefinition.identifier[])
  extension[]: extension::BuildCanonicalExtension("https://www.hl7.org/fhir/R4/messagedefinition-definitions.html#MessageDefinition.graph", messageDefinition.graph[])
}

// Description: Converts a FHIR STU3 MessageDefinition.identifier to FHIR R4 MessageDefinition.identifier.
//
// Argument(s):
//   data : FHIR STU3 MessageDefinition.identifier https://www.hl7.org/fhir/stu3/messagedefinition-definitions.html#MessageDefinition.identifier
//
// Output(s):
//   FHIR R4 MessageDefinition.identifier https://www.hl7.org/fhir/r4/messagedefinition-definitions.html#MessageDefinition.identifier
//
def R3MessageDefinition_IdentifierToR4(url, extension, data) {
  var identifier: extension::fetchIdentifierArray(url, extension)
  if identifier then {
    identifier
  } else {
    arrayOf(data)
  }
}

// Description: Converts a FHIR STU3 MessageDefinition.focus to FHIR R4 MessageDefinition.focus.
//
// Argument(s):
//   data : FHIR STU3 MessageDefinition.focus https://www.hl7.org/fhir/stu3/messagedefinition-definitions.html#MessageDefinition.focus
//
// Output(s):
//   FHIR R4 MessageDefinition.focus https://www.hl7.org/fhir/r4/messagedefinition-definitions.html#MessageDefinition.focus
//
def R3MessageDefinition_FocusToR4(required data) {
  code: data.code
  profile: datatypes::ReferenceToCanonical(data.profile)
  min: data.min
  min: utilities::defaultIfNull($this.min, 0)
  max: data.max
}

// Description: Converts a FHIR R4 MessageDefinition.focus to FHIR STU3 MessageDefinition.focus.
//
// Argument(s):
//   data : FHIR R4 MessageDefinition.focus https://www.hl7.org/fhir/r4/messageheader-definitions.html#MessageDefinition.focus
//
// Output(s):
//   FHIR STU3 MessageDefinition.focus https://www.hl7.org/fhir/stu3/messageheader-definitions.html#MessageDefinition.focus
//
def R4MessageDefinition_FocusToR3(data) {
  code: data.code
  profile: datatypes::CanonicalToReference(data.profile)
  min: data.min
  max: data.max
}

// Description: Converts a FHIR STU3 MessageDefinition.responseRequired to FHIR R4 MessageDefinition.responseRequired.
//
// Argument(s):
//   data : FHIR STU3 MessageDefinition.responseRequired https://www.hl7.org/fhir/stu3/messagedefinition-definitions.html#MessageDefinition.responseRequired
//
// Output(s):
//   FHIR R4 MessageDefinition.responseRequired https://www.hl7.org/fhir/r4/messagedefinition-definitions.html#MessageDefinition.responseRequired
//
def R3MessageDefinition_ResponseRequiredToR4(data) {
  if data then {
    "always"
  } else {
    "never"
  }
}

// Description: Converts a FHIR R4 MessageDefinition.responseRequired to FHIR STU3 MessageDefinition.responseRequired.
//
// Argument(s):
//   data : FHIR R4 MessageDefinition.responseRequired https://www.hl7.org/fhir/r4/messageheader-definitions.html#MessageDefinition.responseRequired
//
// Output(s):
//   FHIR STU3 MessageDefinition.responseRequired https://www.hl7.org/fhir/stu3/messageheader-definitions.html#MessageDefinition.responseRequired
//
def R4MessageDefinition_ResponseRequiredToR3(data) {
  if data == "always" then {
    true
  } else {
    false
  }
}

// Description: Converts a FHIR STU3 MessageDefinition.allowedResponse to FHIR R4 MessageDefinition.allowedResponse.
//
// Argument(s):
//   data : FHIR STU3 MessageDefinition.allowedResponse https://www.hl7.org/fhir/stu3/messagedefinition-definitions.html#MessageDefinition.allowedResponse
//
// Output(s):
//   FHIR R4 MessageDefinition.allowedResponse https://www.hl7.org/fhir/r4/messagedefinition-definitions.html#MessageDefinition.allowedResponse
//
def R3MessageDefinition_AllowedResponseToR4(data) {
  message: datatypes::ReferenceToCanonical(data.message)
  situation: data.situation
}

// Description: Converts a FHIR R4 MessageDefinition.allowedResponse to FHIR STU3 MessageDefinition.allowedResponse.
//
// Argument(s):
//   data : FHIR R4 MessageDefinition.allowedResponse https://www.hl7.org/fhir/r4/messageheader-definitions.html#MessageDefinition.allowedResponse
//
// Output(s):
//   FHIR STU3 MessageDefinition.allowedResponse https://www.hl7.org/fhir/stu3/messageheader-definitions.html#MessageDefinition.allowedResponse
//
def R4MessageDefinition_AllowedResponseToR3(data) {
  message: datatypes::CanonicalToReference(data.message)
  situation: data.situation
}
